server:
  port: 1004
#服务的名称
spring:
  application:
   name: baas-employer
  #加入ribbon

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:1001/eureka/
feign:
  hystrix:
   enabled: true #feign开启hystrix支持
hystrix:
   command:
    default:
      execution:
        timeout:
           enabled: true
        isolation:
           thread:
             timeoutInMilliseconds: 8000
              #hystrix的超时时间要大于 (1 + MaxAutoRetries + MaxAutoRetriesNextServer) * ReadTimeout 比较好
ribbon:
    #    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule #配置规则 随机
    # NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RoundRobinRule #配置规则 轮询
    #    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RetryRule #配置规则 重试
    #    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.WeightedResponseTimeRule #配置规则 响应时间权重
    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.BestAvailableRule #配置规则 最空闲连接策略
    ConnectTimeout: 500 #请求连接超时时间
    ReadTimeout: 1000 #请求处理的超时时间
    OkToRetryOnAllOperations: true #对所有请求都进行重试
    MaxAutoRetriesNextServer: 1 #切换实例的重试次数
    MaxAutoRetries: 1 #对当前实例的重试次数
zuul:
      host:
        socket-timeout-millis: 60000
        connect-timeout-millis: 60000